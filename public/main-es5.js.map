{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/sign-in/sign-in.component.ts","webpack:///src/app/components/sign-in/sign-in.component.html","webpack:///src/app/components/users/users.component.ts","webpack:///src/app/components/users/users.component.html","webpack:///src/app/services/admin-auth-guard.service.ts","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","auth","AppComponent","title","x","document","getElementById","navSignIn","userDropdown","className","body","scrollIntoView","behavior","block","myFunction","toTop","selector","templateUrl","styleUrls","routes","path","component","canActivate","redirectTo","pathMatch","AppModule","forRoot","positionClass","closeButton","preventDuplicates","declarations","imports","providers","bootstrap","HomeComponent","ProfileComponent","toastr","currentPassword","newPassword","confirmationPassword","getUserDetails","profile","subscribe","user","details","err","console","error","salt","getHash","next","data","hash","updateUser","password","login","success","log","save","RegisterComponent","router","credentials","name","email","role","firstName","lastName","register","navigateByUrl","message","SignInComponent","UsersComponent","userService","selectedUser","users","getUsers","addUser","style","display","clearDialog","deleteUser","_id","n","i","length","splice","resetPassword","option","AdminAuthGuardService","isAdmin","providedIn","AuthGuardService","isLoggedIn","httpOptions","headers","AuthenticationService","http","BACKEND_URL_USERS","token","localStorage","setItem","getItem","getToken","payload","split","window","atob","JSON","parse","exp","Date","now","method","type","base","post","get","Authorization","request","pipe","saveToken","removeItem","put","UserService","httpClient","API_URL","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\nimport { AuthenticationService } from './services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Dietary habits';\r\n\r\n  constructor(public auth: AuthenticationService) {}\r\n\r\n  myFunction() {\r\n    const x = document.getElementById('myTopnav');\r\n    const navSignIn = document.getElementById('navSignIn');\r\n    const userDropdown = document.getElementById('userDropdown');\r\n\r\n    if (x.className === 'topnav') {\r\n        x.className += ' responsive';\r\n        if (navSignIn !== null) {\r\n          navSignIn.className = '';\r\n        }\r\n        if (userDropdown !== null) {\r\n          userDropdown.className = 'dropdown';\r\n        }\r\n    } else {\r\n        x.className = 'topnav';\r\n        if (navSignIn !== null) {\r\n          navSignIn.className = 'w3-right';\r\n        }\r\n        if (userDropdown !== null) {\r\n          userDropdown.className = 'dropdown w3-right';\r\n        }\r\n    }\r\n  }\r\n\r\n  toTop() {\r\n    document.body.scrollIntoView({behavior: 'smooth', block: 'start'});\r\n  }\r\n}\r\n","<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n</head>\r\n<div class=\"topnav\" id=\"myTopnav\">\r\n  <a routerLink=\"/home\"><i class=\"fa fa-home\"></i> Home</a>\r\n<a *ngIf=\"auth.isAdmin()\" style=\"cursor: pointer;\" routerLink=\"/users\"><i class=\"fa fa-users\"></i> Users</a>  <a *ngIf=\"!auth.isLoggedIn()\" class=\"w3-right\" id=\"navSignIn\" routerLink=\"/sign-in\"><i class=\"fa fa-sign-in\"></i> Sign in</a>\r\n\r\n  <div class=\"dropdown w3-right\" id=\"userDropdown\" *ngIf=\"auth.isLoggedIn()\">\r\n    <button class=\"dropbtn\"><i class=\"fa fa-user\"></i> {{ auth.getUserDetails()?.name}}\r\n      <i class=\"fa fa-caret-down\"></i>\r\n    </button>\r\n    <div class=\"dropdown-content\">\r\n        <a style=\"cursor: pointer;\" routerLink=\"/profile\"><i class=\"fa fa-user\"></i> My profile</a>\r\n      <a style=\"cursor: pointer;\" (click)=\"auth.logout()\"><i class=\"fa fa-sign-out\"></i> Logout</a>\r\n    </div>\r\n  </div>\r\n\r\n  <a class=\"icon\" (click)=\"myFunction()\">\r\n    <i class=\"fa fa-bars\"></i>\r\n  </a>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<footer class=\"w3-container w3-padding-32 w3-dark-grey w3-center\">\r\n  <div class=\"w3-padding-16\"><span class=\"w3-xlarge w3-border-blue w3-bottombar\">Contact</span></div>\r\n    <p><i class=\"fa fa-map-marker w3-text-blue w3-xlarge\"></i>  John Kennedy 36, New Belgrade, Serbia</p>\r\n    <p><i class=\"fa fa-clock-o w3-text-blue w3-xlarge\"></i>  Mon-Fri : 09-17h</p>\r\n    <p><i class=\"fa fa-phone w3-text-blue w3-xlarge\"></i>  +38165515524</p>\r\n    <p><i class=\"fa fa-envelope-o w3-text-blue w3-xlarge\"></i>  contact@dietaryhabits.com</p>\r\n<a class=\"w3-button w3-black w3-margin\" (click)=\"toTop()\"><i class=\"fa fa-arrow-up w3-margin-right\"></i>To top</a>\r\n<div class=\"w3-xlarge w3-section\">\r\n<i class=\"fa fa-facebook-official w3-hover-opacity\" style=\"padding: 5pt;\"></i>\r\n<i class=\"fa fa-instagram w3-hover-opacity\" style=\"padding: 5pt;\"></i>\r\n<i class=\"fa fa-snapchat w3-hover-opacity\" style=\"padding: 5pt;\"></i>\r\n<i class=\"fa fa-pinterest-p w3-hover-opacity\" style=\"padding: 5pt;\"></i>\r\n<i class=\"fa fa-twitter w3-hover-opacity\" style=\"padding: 5pt;\"></i>\r\n<i class=\"fa fa-linkedin w3-hover-opacity\" style=\"padding: 5pt;\"></i>\r\n</div>\r\n<p>Powered by <a class=\"w3-hover-text-green\">someone</a></p>\r\n</footer>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { SignInComponent } from './components/sign-in/sign-in.component';\r\nimport { AuthGuardService } from './services/auth-guard.service';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { AdminAuthGuardService } from './services/admin-auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'sign-in', component: SignInComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'users', component: UsersComponent, canActivate: [AdminAuthGuardService] },\r\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuardService] },\r\n  { path: '**', redirectTo: '/home', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    SignInComponent,\r\n    RegisterComponent,\r\n    UsersComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n\tBrowserAnimationsModule,\r\n    RouterModule.forRoot(routes),\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-bottom-center',\r\n      closeButton: true,\r\n      preventDuplicates: true\r\n    })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"siva\">\r\n    <header class=\"w3-display-container w3-content w3-wide\" style=\"max-width:1500px;\" id=\"home\">\r\n        <img class=\"w3-image\" src=\"../../../assets/bg.jpg\" alt=\"Food table\" width=\"1500\" height=\"800\">\r\n        <div class=\"w3-display-middle w3-margin-top w3-center\">\r\n          <h1 class=\"w3-xxxlarge w3-text-white\"><span class=\"w3-padding w3-black\" style=\"opacity: 0.8;\"><b>Dietary habits</b></span><br><br> <span class=\"w3-hide-small w3-text-light-grey\">Welcome!</span></h1>\r\n        </div>\r\n      </header>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserDetails, AuthenticationService } from '../../services/authentication.service';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  details: any;\r\n  currentPassword = '';\r\n  newPassword = '';\r\n  confirmationPassword = '';\r\n\r\n  constructor(private auth: AuthenticationService, private toastr: ToastrService) {}\r\n\r\n  ngOnInit() {\r\n    this.getUserDetails();\r\n  }\r\n\r\n  getUserDetails() {\r\n    this.auth.profile().subscribe(user => {\r\n      this.details = user;\r\n    }, (err) => {\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if(this.newPassword !== this.confirmationPassword) {\r\n      this.toastr.error('New password and Confirmation password do not match!', 'Error');\r\n      return;\r\n    }\r\n    var req = {\r\n      currentPassword: this.currentPassword,\r\n      salt: this.details.salt\r\n    };\r\n    this.auth.getHash(req).subscribe({\r\n      next: data => {\r\n        if (this.details.hash === data.hash) {\r\n          this.details.newPassword = this.newPassword;\r\n          this.auth.updateUser(this.details).subscribe({\r\n            next: data => {\r\n              if(this.newPassword !== ''){\r\n                this.details.password = this.newPassword;\r\n              } else {\r\n                this.details.password = this.currentPassword;\r\n              }\r\n              this.auth.login(this.details).subscribe(() => {\r\n                this.toastr.success('Changes saved successfully!', 'Success');\r\n              }, (err) => {\r\n                this.toastr.error('Could not update your profile!', 'Error');\r\n              });\r\n              this.getUserDetails();\r\n              this.currentPassword = '';\r\n              this.newPassword = '';\r\n              this.confirmationPassword = '';\r\n            },\r\n            error: error => {\r\n              this.toastr.error('Could not update your profile!', 'Error');\r\n            }\r\n          });\r\n        } else {\r\n          this.toastr.error('Current password is not correct!', 'Error');\r\n        }\r\n      },\r\n      error: error => {\r\n        console.log(error);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"w3-center w3-padding\" style=\"margin:0 auto; max-width: 600px;\">\r\n    <div class=\"w3-card-4\">\r\n      <div class=\"w3-container w3-blue\">\r\n        <h2>My profile</h2>\r\n      </div>\r\n      <form class=\"w3-container\" #formControl=\"ngForm\">\r\n\r\n          <p>\r\n              <label class=\"w3-text-blue\">\r\n                <b>Name</b>\r\n              </label>\r\n              <input required [(ngModel)]=\"details.name\" name=\"name\" type=\"text\" style=\"text-align: center;\"\r\n                class=\"w3-input w3-border w3-light-grey\">\r\n            </p>\r\n        <p>\r\n          <label class=\"w3-text-blue\">\r\n            <b>Email</b>\r\n          </label>\r\n          <input required [(ngModel)]=\"details.email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" name=\"email\" type=\"text\" style=\"text-align: center;\"\r\n            class=\"w3-input w3-border w3-light-grey\">\r\n          <label class=\"w3-text-grey\" style=\"font-style: italic\">\r\n            <b>someone@domain.domain</b>\r\n          </label>\r\n        </p>\r\n        <p>\r\n          <label class=\"w3-text-blue\">\r\n            <b>New password</b>\r\n          </label>\r\n          <input [(ngModel)]=\"newPassword\" name=\"newpassword\" minlength=\"8\" maxlength=\"20\" pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,20}$\"\r\n            type=\"password\" style=\"text-align: center;\" class=\"w3-input w3-border w3-light-grey\">\r\n          <label class=\"w3-text-grey\" style=\"font-style: italic\">\r\n            <b style=\"font-size: 9pt;\">Minimum 8 and maximum 20 characters. It must contain at least one lowercase and uppercase letter, a number as well\r\n              as a special character.\r\n              <span style=\"color: red;\"> (Only if you want to change the current password)</span>\r\n            </b>\r\n          </label>\r\n        </p>\r\n        <p>\r\n          <label class=\"w3-text-blue\">\r\n            <b>Confirmation password</b>\r\n          </label>\r\n          <input [(ngModel)]=\"confirmationPassword\" name=\"confirmationpassword\" minlength=\"8\" maxlength=\"20\" pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,20}$\"\r\n            type=\"password\" style=\"text-align: center;\" class=\"w3-input w3-border w3-light-grey\">\r\n          <label class=\"w3-text-grey\" style=\"font-style: italic\">\r\n              <b style=\"font-size: 9pt;\">Enter the new password again to confirm it.\r\n                  <span style=\" color: red;\"> (Only if you want to change the current password)</span>\r\n            </b>\r\n          </label>\r\n        </p>\r\n\r\n        <p>\r\n            <label class=\"w3-text-blue\">\r\n              <b>Current password <span style=\" color: red;\"> *</span></b>\r\n            </label>\r\n            <label class=\"w3-text-grey\" style=\"font-style: italic\">\r\n            </label>\r\n            <input required [(ngModel)]=\"currentPassword\" minlength=\"1\" maxlength=\"40\" name=\"oldpassword\" type=\"password\" style=\"text-align: center;\"\r\n              class=\"w3-input w3-border w3-light-grey\">\r\n          </p>\r\n\r\n        <p class=\"w3-center\">\r\n          <button [disabled]=\"!formControl.valid\" (click)=\"save()\" class=\"w3-btn w3-blue\">Save changes</button>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService, TokenPayload } from '../../services/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  firstName: '';\r\n  lastName: '';\r\n  confirmationPassword: '';\r\n\r\n  credentials: TokenPayload = {\r\n    name:'',\r\n    email: '',\r\n    password: '',\r\n    role: ''\r\n  };\r\n\r\n  constructor(private auth: AuthenticationService, private router: Router, private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  register() {\r\n    if (this.credentials.password === this.confirmationPassword) {\r\n      this.credentials.name = this.firstName + ' ' + this.lastName;\r\n      this.auth.register(this.credentials).subscribe(() => {\r\n\t\tthis.toastr.success('You successfully made an account!', 'Welcome ' + this.auth.getUserDetails().name);\r\n        this.router.navigateByUrl('/profile');\r\n      }, (err) => {\r\n        this.toastr.error(err.error.message, 'Error');\r\n      });\r\n    } else {\r\n      this.toastr.error('Password and Confirmation password do not match!', 'Error');\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"w3-center w3-padding\" style=\"margin:0 auto; max-width: 600px;\">\r\n    <div class=\"w3-card-4\">\r\n      <div class=\"w3-container w3-blue\">\r\n        <h2>Register form</h2>\r\n      </div>\r\n      <form class=\"w3-container\" #formControl=\"ngForm\">\r\n        <p>\r\n          <label class=\"w3-text-blue\">\r\n            <b>First name</b>\r\n          </label>\r\n          <input required [(ngModel)]=\"firstName\" minlength=\"2\" maxlength=\"40\" name=\"first\" type=\"text\" style=\"text-align: center;\"\r\n            class=\"w3-input w3-border w3-light-grey\">\r\n        </p>\r\n        <p>\r\n          <label class=\"w3-text-blue\">\r\n            <b>Last name</b>\r\n          </label>\r\n          <input required [(ngModel)]=\"lastName\" minlength=\"2\" maxlength=\"40\" name=\"last\" type=\"text\" style=\"text-align: center;\" class=\"w3-input w3-border w3-light-grey\">\r\n        </p>\r\n        <p>\r\n          <label class=\"w3-text-blue\">\r\n            <b>Email</b>\r\n          </label>\r\n          <input required [(ngModel)]=\"credentials.email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" minlength=\"1\" maxlength=\"40\"\r\n            name=\"email\" type=\"text\" style=\"text-align: center;\" class=\"w3-input w3-border w3-light-grey\">\r\n        </p>\r\n        <p>\r\n          <label class=\"w3-text-blue\">\r\n            <b>Password</b>\r\n          </label>\r\n          <label class=\"w3-text-grey\" style=\"font-style: italic\">\r\n          </label>\r\n          <input required [(ngModel)]=\"credentials.password\" minlength=\"8\" maxlength=\"20\" pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,20}$\" name=\"password\" type=\"password\" style=\"text-align: center;\"\r\n            class=\"w3-input w3-border w3-light-grey\">\r\n            <label class=\"w3-text-grey\" style=\"font-style: italic\">\r\n                <b style=\"font-size: 9pt;\">Minimum 8 and maximum 20 characters. It must contain at least one lowercase and uppercase letter, a number as well\r\n                  as a special character.\r\n                </b>\r\n              </label>\r\n        </p>\r\n\r\n        <p>\r\n          <label class=\"w3-text-blue\">\r\n            <b>Confirmation password</b>\r\n          </label>\r\n          <label class=\"w3-text-grey\" style=\"font-style: italic\">\r\n          </label>\r\n          <input required [(ngModel)]=\"confirmationPassword\" minlength=\"8\" maxlength=\"20\" pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,20}$\" name=\"password\" type=\"password\" style=\"text-align: center;\"\r\n            class=\"w3-input w3-border w3-light-grey\">\r\n          <label class=\"w3-text-grey\" style=\"font-style: italic\">\r\n            <b style=\"font-size: 9pt;\">Enter the new password again to confirm it.</b>\r\n          </label>\r\n        </p>\r\n\r\n        <p class=\"w3-center\">\r\n          <button [disabled]=\"!formControl.valid\" (click)=\"register()\" class=\"w3-btn w3-blue\">Register</button>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TokenPayload, AuthenticationService } from '../../services/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n\r\n  credentials: TokenPayload = {\r\n    email: '',\r\n    password: '',\r\n    role: ''\r\n  };\r\n\r\n  constructor( private auth: AuthenticationService, private router: Router, private toastr: ToastrService ) {}\r\n\r\n\r\n  login() {\r\n    this.auth.login(this.credentials).subscribe(() => {\r\n      this.router.navigateByUrl('/profile');\r\n\t  this.toastr.success('You successfully signed-in!', 'Welcome ' + this.auth.getUserDetails().name);\r\n    }, (err) => {\r\n      this.toastr.error('Check email and password fields!', 'Error');\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"w3-center w3-padding\" style=\"margin:0 auto; max-width: 600px;\">\r\n  <div class=\"w3-card-4\">\r\n    <div class=\"w3-container w3-blue\">\r\n      <h2>Sign-in</h2>\r\n    </div>\r\n    <form class=\"w3-container\" #formControl=\"ngForm\">\r\n      <p>\r\n        <label class=\"w3-text-blue\">\r\n          <b>Email</b>\r\n        </label>\r\n        <input required [(ngModel)]=\"credentials.email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" minlength=\"1\" maxlength=\"40\" name=\"email\" type=\"text\" style=\"text-align: center;\" class=\"w3-input w3-border w3-light-grey\">\r\n      </p>\r\n      <p>\r\n        <label class=\"w3-text-blue\">\r\n          <b>Password</b>\r\n        </label>\r\n        <label class=\"w3-text-grey\" style=\"font-style: italic\">\r\n        </label>\r\n        <input required [(ngModel)]=\"credentials.password\" minlength=\"1\" maxlength=\"40\" name=\"password\" type=\"password\" style=\"text-align: center;\" class=\"w3-input w3-border w3-light-grey\">\r\n      </p>\r\n\r\n      <p class=\"w3-center\">\r\n        <button [disabled]=\"!formControl.valid\" (click)=\"login()\" class=\"w3-btn w3-blue\">Sign-in</button>\r\n      </p>\r\n    </form>\r\n  </div>\r\n  <div class=\"w3-padding-32\">If you don't have an account <a style=\"cursor: pointer;\" routerLink=\"/register\"> <button class=\"w3-btn w3-blue\"><i class=\"fa fa-user\"></i> Register</button></a></div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../../models/user';\r\nimport { UserService } from '../../services/user.service';\r\nimport { TokenPayload, AuthenticationService } from '../../services/authentication.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  selectedUser: User = {\r\n    email: '',\r\n    name: '',\r\n    hash: '',\r\n    role: '',\r\n    salt: ''\r\n  }\r\n  users: User[] = [];\r\n  firstName: '';\r\n  lastName: '';\r\n  confirmationPassword: '';\r\n\r\n  credentials: TokenPayload = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    role: ''\r\n  };\r\n\r\n  constructor(private userService: UserService, private toastr: ToastrService) { }\r\n\r\n  getUsers() {\r\n    this.userService.getUsers()\r\n      .subscribe(users => {\r\n        this.users = users;\r\n      });\r\n  }\r\n\r\n  addUser() {\r\n    if (this.credentials.password === this.confirmationPassword) {\r\n      this.credentials.name = this.firstName + ' ' + this.lastName;\r\n      this.userService.addUser(this.credentials).subscribe(() => {\r\n        this.toastr.success('You successfully added a user!', 'Success');\r\n        document.getElementById('id01').style.display = 'none'\r\n        this.clearDialog();\r\n        this.getUsers();\r\n      }, (err) => {\r\n        this.toastr.error(err.error.message, 'Error');\r\n      });\r\n    } else {\r\n      this.toastr.error('Password and Confirmation password do not match!', 'Error');\r\n    }\r\n  }\r\n\r\n  updateUser() {\r\n    this.userService.updateUser(this.selectedUser)\r\n      .subscribe(data => {\r\n        document.getElementById('id02').style.display = 'none';\r\n        this.toastr.success('You successfully updated this user!', 'Success');\r\n        this.getUsers();\r\n      }, (err) => {\r\n        this.toastr.error(err.error.message, 'Error');\r\n      });\r\n  }\r\n\r\n\r\n  deleteUser() {\r\n    this.userService.deleteUser(this.selectedUser._id)\r\n      .subscribe(data => {\r\n        document.getElementById('id03').style.display = 'none';\r\n        this.toastr.success('You successfully deleted this user!', 'Success');\r\n        if (data.n == 1) {\r\n          for (var i = 0; i < this.users.length; i++) {\r\n            if (this.selectedUser._id == this.users[i]._id) {\r\n              this.users.splice(i, 1);\r\n            }\r\n          }\r\n        }\r\n      }, (err) => {\r\n        this.toastr.error(err.error.message, 'Error');\r\n      });\r\n  }\r\n\r\n  resetPassword() {\r\n    this.userService.resetPassword(this.selectedUser).subscribe(() => {\r\n      this.toastr.success('You successfully reset the password for user!', 'Success');\r\n      document.getElementById('id02').style.display = 'none';\r\n    }, (err) => {\r\n      this.toastr.error(err.error.message, 'Error');\r\n    });\r\n  }\r\n\r\n  selectUser(option, user) {\r\n    if (user != null && option != null) {\r\n      this.selectedUser = user;\r\n      if (option === 2) {\r\n        document.getElementById('id02').style.display = 'block'\r\n      } else if (option === 3) {\r\n        document.getElementById('id03').style.display = 'block';\r\n      } else {\r\n        console.log(\"Something unexpected hapend!\");\r\n      }\r\n    }\r\n  }\r\n\r\n  clearDialog() {\r\n    this.firstName = '';\r\n    this.lastName = '';\r\n    this.confirmationPassword = '';\r\n    this.credentials.email = '';\r\n    this.credentials.name = '';\r\n    this.credentials.password = '';\r\n    this.credentials.role = '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getUsers();\r\n  }\r\n\r\n}\r\n","<div class=\"w3-container w3-center\">\r\n\r\n  <div id=\"id01\" class=\"w3-modal\">\r\n    <div class=\"w3-modal-content w3-animate-top w3-card-4\">\r\n      <header class=\"w3-container w3-blue\">\r\n\t          <span class=\"w3-button w3-display-topleft\" (click)=\"clearDialog()\">Clear\r\n          <i class=\"fa fa-eraser\"></i>\r\n        </span>\r\n        <span onclick=\"document.getElementById('id01').style.display='none'\" class=\"w3-button w3-display-topright\">&times;</span>\r\n        <h2>New user form</h2>\r\n      </header>\r\n      <div class=\"w3-container\">\r\n\r\n        <form class=\"w3-container\" #formControl=\"ngForm\">\r\n          <p>\r\n            <label class=\"w3-text-blue\">\r\n              <b>First name</b>\r\n            </label>\r\n            <input required [(ngModel)]=\"firstName\" minlength=\"2\" maxlength=\"40\" name=\"first\" type=\"text\" style=\"text-align: center;\"\r\n              class=\"w3-input w3-border w3-light-grey\">\r\n          </p>\r\n          <p>\r\n            <label class=\"w3-text-blue\">\r\n              <b>Last name</b>\r\n            </label>\r\n            <input required [(ngModel)]=\"lastName\" minlength=\"2\" maxlength=\"40\" name=\"last\" type=\"text\" style=\"text-align: center;\" class=\"w3-input w3-border w3-light-grey\">\r\n          </p>\r\n          <p>\r\n            <label class=\"w3-text-blue\">\r\n              <b>Email</b>\r\n            </label>\r\n            <input required [(ngModel)]=\"credentials.email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" minlength=\"1\" maxlength=\"40\"\r\n              name=\"email\" type=\"text\" style=\"text-align: center;\" class=\"w3-input w3-border w3-light-grey\">\r\n          </p>\r\n          <p>\r\n            <label class=\"w3-text-blue\">\r\n              <b>Password</b>\r\n            </label>\r\n            <label class=\"w3-text-grey\" style=\"font-style: italic\">\r\n            </label>\r\n            <input required [(ngModel)]=\"credentials.password\" minlength=\"8\" maxlength=\"20\" pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,20}$\"\r\n              name=\"password\" type=\"password\" style=\"text-align: center;\" class=\"w3-input w3-border w3-light-grey\">\r\n            <label class=\"w3-text-grey\" style=\"font-style: italic\">\r\n              <b style=\"font-size: 9pt;\">Minimum 8 and maximum 20 characters. It must contain at least one lowercase and uppercase letter, a number\r\n                as well as a special character.\r\n              </b>\r\n            </label>\r\n          </p>\r\n\r\n          <p>\r\n            <label class=\"w3-text-blue\">\r\n              <b>Confirmation password</b>\r\n            </label>\r\n            <label class=\"w3-text-grey\" style=\"font-style: italic\">\r\n            </label>\r\n            <input required [(ngModel)]=\"confirmationPassword\" minlength=\"8\" maxlength=\"20\" pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,20}$\"\r\n              name=\"password\" type=\"password\" style=\"text-align: center;\" class=\"w3-input w3-border w3-light-grey\">\r\n            <label class=\"w3-text-grey\" style=\"font-style: italic\">\r\n              <b style=\"font-size: 9pt;\">Enter the new password again to confirm it.</b>\r\n            </label>\r\n          </p>\r\n\r\n          <p class=\"w3-center\">\r\n            <button [disabled]=\"!formControl.valid\" (click)=\"addUser()\" class=\"w3-btn w3-green\">Create\r\n              <i class=\"fa fa-check\"></i>\r\n            </button>\r\n          </p>\r\n\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"w3-container w3-center\">\r\n\r\n  <div id=\"id02\" class=\"w3-modal\">\r\n    <div class=\"w3-modal-content w3-animate-top w3-card-4\">\r\n      <header class=\"w3-container w3-blue\">\r\n        <span onclick=\"document.getElementById('id02').style.display='none'\" class=\"w3-button w3-display-topright\">&times;</span>\r\n        <h2>Update user form</h2>\r\n      </header>\r\n      <div class=\"w3-container\">\r\n\t<form class=\"w3-container\" #formControlEdit=\"ngForm\">\r\n          <p>\r\n            <label class=\"w3-text-blue\">\r\n              <b>Name</b>\r\n            </label>\r\n            <input required [(ngModel)]=\"selectedUser.name\" name=\"name\" type=\"text\" style=\"text-align: center;\" class=\"w3-input w3-border w3-light-grey\">\r\n          </p>\r\n          <p>\r\n            <label class=\"w3-text-blue\">\r\n              <b>Email</b>\r\n            </label>\r\n            <input required [(ngModel)]=\"selectedUser.email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" name=\"email\" type=\"text\"\r\n              style=\"text-align: center;\" class=\"w3-input w3-border w3-light-grey\">\r\n            <label class=\"w3-text-grey\" style=\"font-style: italic\">\r\n              <b>someone@domain.domain</b>\r\n            </label>\r\n          </p>\r\n\r\n          <p>\r\n            <label class=\"w3-text-blue\">\r\n              <b>Role</b>\r\n            </label>\r\n            <select required [(ngModel)]=\"selectedUser.role\" style=\"text-align: center;\" class=\"w3-center w3-input w3-border w3-light-grey w3-select w3-border\"\r\n              name=\"option\">\r\n              <option value=\"admin\">Admin</option>\r\n              <option value=\"user\">User</option>\r\n            </select>\r\n          </p>\r\n\r\n          <p class=\"w3-center\">\r\n            <button [disabled]=\"!formControlEdit.valid\" (click)=\"updateUser()\" class=\"w3-btn w3-blue\">Update\r\n              <i class=\"fa fa-check\"></i>\r\n            </button>\r\n          </p>\r\n          <p>\r\n              <button (click)=\"resetPassword()\" class=\"w3-btn w3-black\">Reset Password <i class=\"fa fa-key\"></i></button>\r\n          </p>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div id=\"id03\" class=\"modal\">\r\n  <span onclick=\"document.getElementById('id03').style.display='none'\" class=\"close\" title=\"Close Modal\">×</span>\r\n  <form class=\"modal-content\">\r\n    <div class=\"container\">\r\n      <h1>Delete Account</h1>\r\n      <p>Name: {{selectedUser?.name}}</p>\r\n      <p>Email: {{selectedUser?.email}}</p>\r\n      <p>Role: {{selectedUser?.role}}</p>\r\n      <p>Are you sure you want to delete this account?</p>\r\n\r\n      <div class=\"clearfix\">\r\n        <button type=\"button\" onclick=\"document.getElementById('id03').style.display='none'\" class=\"cancelbtn\">Cancel</button>\r\n        <button type=\"button\" (click)=\"deleteUser()\" class=\"deletebtn\">Delete</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<div class=\"search-container w3-center w3-padding\">\r\n    <input type=\"text\" placeholder=\"Search..\" name=\"search\">\r\n  <button style=\"margin-right: 15pt;\" class=\"w3-button\">\r\n    <i class=\"fa fa-search\"></i>\r\n  </button>\r\n  <button class=\"w3-button w3-green\" onclick=\"document.getElementById('id01').style.display='block'\">\r\n    <i class=\"fa fa-user fa-fw\"></i>\r\n    <i class=\"fa fa-plus\"></i>\r\n  </button>\r\n</div>\r\n\r\n<div>\r\n  <div class=\"row\">\r\n    <div class=\"column w3-card w3-hover-blue\" *ngFor=\"let user of users\">\r\n      <h3 style=\"text-align: center\">{{user.name}}</h3>\r\n      <p style=\"text-align: center\">{{user.email}}</p>\r\n      <p style=\"text-align: center\">Role: {{user.role}}</p>\r\n      <div class=\"w3-center w3-padding\">\r\n                <button style=\"margin-right: 5pt\" class=\"w3-button w3-black\" (click)=\"selectUser(2, user)\">\r\n          <i class=\"fa fa-edit\"></i>\r\n        </button>\r\n        <button class=\"w3-button w3-red\" (click)=\"selectUser(3, user)\">\r\n          <i class=\"fa fa-trash-o\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminAuthGuardService implements CanActivate{\r\n\r\n  constructor(private auth: AuthenticationService, private router: Router) { }\r\n\r\n  canActivate() {\r\n    if (!this.auth.isAdmin()) {\r\n      this.router.navigateByUrl('/');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(private auth: AuthenticationService, private router: Router) { }\r\n\r\n  canActivate() {\r\n    if (!this.auth.isLoggedIn()) {\r\n      this.router.navigateByUrl('/');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json',\r\n  })\r\n};\r\n\r\nexport interface UserDetails {\r\n  _id: string;\r\n  email: string;\r\n  name: string;\r\n  role:string;\r\n  exp: number;\r\n  iat: number;\r\n}\r\n\r\ninterface TokenResponse {\r\n  token: string;\r\n}\r\n\r\nexport interface TokenPayload {\r\n  email: string;\r\n  password: string;\r\n  name?: string;\r\n  role:string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  private token: string;\r\n\r\n  private BACKEND_URL_USERS = 'https://dietary-habits.herokuapp.com/users'\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  private saveToken(token: string): void {\r\n    localStorage.setItem('mean-token', token);\r\n    this.token = token;\r\n  }\r\n\r\n  private getToken(): string {\r\n    if (!this.token) {\r\n      this.token = localStorage.getItem('mean-token');\r\n    }\r\n    return this.token;\r\n  }\r\n\r\n\r\n  public getUserDetails(): UserDetails {\r\n    const token = this.getToken();\r\n    let payload;\r\n    if (token) {\r\n      payload = token.split('.')[1];\r\n      payload = window.atob(payload);\r\n      return JSON.parse(payload);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    const user = this.getUserDetails();\r\n    if (user) {\r\n      return user.exp > Date.now() / 1000;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isAdmin(): boolean {\r\n    const user = this.getUserDetails();\r\n    if(user){\r\n      if(user.role === 'admin'){\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private request(method: 'post'|'get', type: 'login'|'register'|'profile', user?: TokenPayload): Observable<any> {\r\n    let base;\r\n\r\n    if (method === 'post') {\r\n      base = this.http.post(this.BACKEND_URL_USERS + `/${type}`, user);\r\n    } else {\r\n      base = this.http.get(this.BACKEND_URL_USERS + `/${type}`, { headers: { Authorization: `Bearer ${this.getToken()}` }});\r\n    }\r\n\r\n    const request = base.pipe(\r\n      map((data: TokenResponse) => {\r\n        if (data.token) {\r\n          this.saveToken(data.token);\r\n        }\r\n        return data;\r\n      })\r\n    );\r\n\r\n    return request;\r\n  }\r\n\r\n  public register(user: TokenPayload): Observable<any> {\r\n    return this.request('post', 'register', user);\r\n  }\r\n\r\n  public login(user: TokenPayload): Observable<any> {\r\n    return this.request('post', 'login', user);\r\n  }\r\n\r\n  public profile(): Observable<any> {\r\n    return this.request('get', 'profile');\r\n  }\r\n\r\n  public logout(): void {\r\n    this.token = '';\r\n    window.localStorage.removeItem('mean-token');\r\n    this.router.navigateByUrl('/');\r\n  }\r\n\r\n  public getHash(body): Observable<any> {\r\n    return this.http.post(this.BACKEND_URL_USERS + '/hash', body, httpOptions);\r\n  }\r\n\r\n  public updateUser(user): Observable<any> {\r\n    return this.http.put(this.BACKEND_URL_USERS + '/update/' + user._id, user ,httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../models/user';\r\nimport { TokenPayload } from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private API_URL = 'https://dietary-habits.herokuapp.com/users';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getUsers(): Observable<User[]> {\r\n    return this.httpClient.get<User[]>(this.API_URL + '/all');\r\n  }\r\n  \r\n  public addUser(user: TokenPayload): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + '/add', user);\r\n  }\r\n  \r\n  public updateUser(user): Observable<any> {\r\n    return this.httpClient.put(this.API_URL + '/admin/update/' + user._id, user);\r\n  }\r\n  \r\n  public deleteUser(id): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + '/delete/' + id);\r\n  }\r\n  \r\n  public resetPassword(user): Observable<any> {\r\n    return this.httpClient.put(this.API_URL + '/resetPassword', user);\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}